{"version":3,"names":["ruleComposer","require","eslint","eslintVersion","ESLint","version","OPT_OUT_PATTERN","rule","Linter","getRules","get","isSemicolon","token","type","value","isUnnecessarySemicolon","context","lastToken","nextToken","getSourceCode","getTokenAfter","lastTokenLine","loc","end","line","nextTokenLine","start","isOptOutToken","test","isDivider","isOneLinerBlock","node","parent","report","missing","getLastToken","message","fix","fixer","insertTextAfter","remove","parseInt","module","exports","joinReports","options","exceptOneLine","omitLastInOneLineBlock","sourceCode"],"sources":["../../src/rules/semi.cjs"],"sourcesContent":["const ruleComposer = require(\"eslint-rule-composer\");\nconst eslint = require(\"eslint\");\nconst eslintVersion = eslint.ESLint.version;\n\nconst OPT_OUT_PATTERN = /^[-[(/+`]/; // One of [(/+-`\n\nconst rule = new eslint.Linter().getRules().get(\"semi\");\n\nfunction isSemicolon(token) {\n  return token.type === \"Punctuator\" && token.value === \";\";\n}\n\nfunction isUnnecessarySemicolon(context, lastToken) {\n  if (!isSemicolon(lastToken)) {\n    return false;\n  }\n\n  const nextToken = context.getSourceCode().getTokenAfter(lastToken);\n\n  if (!nextToken) {\n    return true;\n  }\n\n  const lastTokenLine = lastToken.loc.end.line;\n  const nextTokenLine = nextToken.loc.start.line;\n  const isOptOutToken =\n    OPT_OUT_PATTERN.test(nextToken.value) &&\n    nextToken.value !== \"++\" &&\n    nextToken.value !== \"--\";\n  const isDivider = nextToken.value === \"}\" || nextToken.value === \";\";\n\n  return (lastTokenLine !== nextTokenLine && !isOptOutToken) || isDivider;\n}\n\nfunction isOneLinerBlock(context, node) {\n  const nextToken = context.getSourceCode().getTokenAfter(node);\n\n  if (!nextToken || nextToken.value !== \"}\") {\n    return false;\n  }\n\n  const parent = node.parent;\n\n  return (\n    parent &&\n    parent.type === \"BlockStatement\" &&\n    parent.loc.start.line === parent.loc.end.line\n  );\n}\n\nfunction report(context, node, missing) {\n  const lastToken = context.getSourceCode().getLastToken(node);\n\n  let message,\n    fix,\n    loc = lastToken.loc;\n\n  if (!missing) {\n    message = \"Missing semicolon.\";\n    loc = loc.end;\n    fix = function (fixer) {\n      return fixer.insertTextAfter(lastToken, \";\");\n    };\n  } else {\n    message = \"Extra semicolon.\";\n    loc = loc.start;\n    fix = function (fixer) {\n      return fixer.remove(lastToken);\n    };\n  }\n\n  context.report({\n    node,\n    loc,\n    message,\n    fix,\n  });\n}\n\nif (parseInt(eslintVersion, 10) >= 8) {\n  // ESLint 8 supports class properties / private methods natively\n  // so we simply forward the original rule\n  module.exports = rule;\n} else {\n  module.exports = ruleComposer.joinReports([\n    rule,\n    context => ({\n      \"ClassProperty, ClassPrivateProperty, PropertyDefinition\"(node) {\n        const options = context.options[1];\n        const exceptOneLine =\n          options && options.omitLastInOneLineBlock === true;\n        const sourceCode = context.getSourceCode();\n        const lastToken = sourceCode.getLastToken(node);\n\n        if (context.options[0] === \"never\") {\n          if (isUnnecessarySemicolon(context, lastToken)) {\n            report(context, node, true);\n          }\n        } else {\n          if (!isSemicolon(lastToken)) {\n            if (!exceptOneLine || !isOneLinerBlock(context, node)) {\n              report(context, node);\n            }\n          } else {\n            if (exceptOneLine && isOneLinerBlock(context, node)) {\n              report(context, node, true);\n            }\n          }\n        }\n      },\n    }),\n  ]);\n}\n"],"mappings":"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"}