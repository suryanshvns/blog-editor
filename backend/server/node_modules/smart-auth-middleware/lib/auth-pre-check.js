const Logger = require('smart-node-logger');

const authPreCheck = (config, callback) => (req, res) => {
  const logger = new Logger(req);
  const { IDENTITY_SERVICE_URL } = config;
  const { query } = req;

  if (query && query.access_token) {
    req.headers.authorization = `Bearer ${req.query.access_token}`;
  }
  const { headers } = req;

  if (!IDENTITY_SERVICE_URL) {
    logger.log({
      level: 'error',
      meta: {
        message: 'unexpected-internal-server-error',
        details: 'Exception raised:- Unable to get `IDENTITY_SERVICE_URL` from configuration',
      },
    });

    return res.status(500).json({
      type: 'unexpected-internal-server-error',
      correlationId: req['x-coreplatform-correlationid'],
      details: [
        {
          name: 'unexpected-server-error',
          messages: [ 'Please contact administrator and present correlation identifier for troubleshooting' ],
        },
      ],
    });
  }

  const { authorization } = headers;

  if (!authorization) {
    return res.status(401).json();
  }

  const [ scheme, token ] = authorization.split(' ');

  if (!/^Bearer$/i.test(scheme) || !token) {
    return res.status(401).json();
  }

  return callback();
};

module.exports = authPreCheck;
